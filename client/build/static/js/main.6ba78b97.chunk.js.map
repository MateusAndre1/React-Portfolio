{"version":3,"sources":["components/Jumbotron/index.js","pages/Home/Home.js","pages/About/About.js","pages/Projects/Projects.js","components/Grid/index.js","pages/NotFound/NotFound.js","components/Navbar/index.js","components/Footer/index.js","components/Wrapper/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Jumbotron","props","_ref","children","react_default","a","createElement","className","id","Home","components_Jumbotron","Component","About","Projects","Container","fluid","concat","Row","_ref2","Col","_ref3","size","split","map","join","NotFound","role","aria-label","Navbar","Fragment","href","src","width","height","alt","Wrapper","App","BrowserRouter","components_Wrapper","Navbar_Navbar","Footer","Switch","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6ba78b97.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron(props, { children }) {\n  return (\n    <div className=\"jumbotron\" id={props.id}>\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React, { Component } from 'react';\n// import { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../../components/Jumbotron\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <Jumbotron id={\"homeJ\"}>\n\n          </Jumbotron>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from 'react';\n// import { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../../components/Jumbotron\";\n\nclass About extends Component {\n    render() {\n        return (\n            <Jumbotron>\n\n          </Jumbotron>\n        )\n    }\n}\n\nexport default About\n","import React, { Component } from 'react';\n// import { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../../components/Jumbotron\";\n\nclass Projects extends Component {\n    render() {\n        return (\n            <Jumbotron>\n\n          </Jumbotron>\n        )\n    }\n}\n\nexport default Projects","import React from \"react\";\n\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport Jumbotron from \"../../components/Jumbotron\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>404 Page Not Found</h1>\n              <h1>\n                <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                  ðŸ™„\n              </span>\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from 'react'\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <nav className=\"navbar navbar-light bg-light\">\n          <a className=\"navbar-brand\" href=\"/\">\n            <img src=\"/docs/4.3/assets/brand/bootstrap-solid.svg\" width=\"30\" height=\"30\" alt=\"\"></img>\n          </a>\n          <ul className=\"nav justify-content-end\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/about\">About</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/projects\">Projects</a>\n            </li>\n          </ul>\n        </nav>\n      </React.Fragment>\n    )\n  }\n}\n\n","import React from \"react\";\n\nfunction Navbar() {\n  return (\n    <div>\n      \n    </div>\n  );\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <section className=\"wrapper\">{props.children}</section>;\n}\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Projects from \"./pages/Projects\";\nimport NotFound from \"./pages/NotFound\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Wrapper from \"./components/Wrapper\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div>\n        <Wrapper>\n        <Navbar />\n        </Wrapper>\n        <Footer />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/projects\" component={Projects} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}